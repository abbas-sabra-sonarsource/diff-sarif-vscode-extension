{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "artifacts": [
        {
          "length": 1045,
          "location": {
            "uri": "./sarif-multi-diagnostic-test.c"
          },
          "mimeType": "text/plain",
          "roles": [
            "resultFile"
          ]
        },
        {
          "length": 115,
          "location": {
            "uri": "./plist-multi-file.h"
          },
          "mimeType": "text/plain",
          "roles": [
            "resultFile"
          ]
        }
      ],
      "columnKind": "unicodeCodePoints",
      "results": [
        {
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "importance": "essential",
                      "location": {
                        "message": {
                          "text": "Passing null pointer value via 1st parameter 'ptr'"
                        },
                        "physicalLocation": {
                          "artifactLocation": {
                            "index": 0,
                            "uri": "./sarif-multi-diagnostic-test.c"
                          },
                          "region": {
                            "endColumn": 7,
                            "startColumn": 7,
                            "startLine": 9
                          }
                        }
                      }
                    },
                    {
                      "importance": "essential",
                      "location": {
                        "message": {
                          "text": "Calling 'foo'"
                        },
                        "physicalLocation": {
                          "artifactLocation": {
                            "index": 0,
                            "uri": "./sarif-multi-diagnostic-test.c"
                          },
                          "region": {
                            "endColumn": 9,
                            "endLine": 9,
                            "startColumn": 3,
                            "startLine": 9
                          }
                        }
                      }
                    },
                    {
                      "importance": "essential",
                      "location": {
                        "message": {
                          "text": "Dereference of null pointer (loaded from variable 'ptr')"
                        },
                        "physicalLocation": {
                          "artifactLocation": {
                            "index": 1,
                            "uri": "./plist-multi-file.h"
                          },
                          "region": {
                            "endColumn": 8,
                            "startColumn": 8,
                            "startLine": 2
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "index": 1,
                  "uri": "./plist-multi-file.h"
                },
                "region": {
                  "endColumn": 8,
                  "startColumn": 8,
                  "startLine": 2
                }
              }
            }
          ],
          "message": {
            "text": "Dereference of null pointer (loaded from variable 'ptr')"
          },
          "ruleId": "core.NullDereference",
          "ruleIndex": 0
        },
        {
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "importance": "essential",
                      "location": {
                        "message": {
                          "text": "Calling 'f'"
                        },
                        "physicalLocation": {
                          "artifactLocation": {
                            "index": 0,
                            "uri": "./sarif-multi-diagnostic-test.c"
                          },
                          "region": {
                            "endColumn": 6,
                            "endLine": 45,
                            "startColumn": 3,
                            "startLine": 45
                          }
                        }
                      }
                    },
                    {
                      "importance": "essential",
                      "location": {
                        "message": {
                          "text": "tainted"
                        },
                        "physicalLocation": {
                          "artifactLocation": {
                            "index": 0,
                            "uri": "./sarif-multi-diagnostic-test.c"
                          },
                          "region": {
                            "endColumn": 18,
                            "endLine": 17,
                            "startColumn": 11,
                            "startLine": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "index": 0,
                  "uri": "./sarif-multi-diagnostic-test.c"
                },
                "region": {
                  "endColumn": 18,
                  "endLine": 17,
                  "startColumn": 11,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "tainted"
          },
          "ruleId": "debug.TaintTest",
          "ruleIndex": 1
        },
        {
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "importance": "essential",
                      "location": {
                        "message": {
                          "text": "Calling 'g'"
                        },
                        "physicalLocation": {
                          "artifactLocation": {
                            "index": 0,
                            "uri": "./sarif-multi-diagnostic-test.c"
                          },
                          "region": {
                            "endColumn": 6,
                            "endLine": 46,
                            "startColumn": 3,
                            "startLine": 46
                          }
                        }
                      }
                    },
                    {
                      "importance": "essential",
                      "location": {
                        "message": {
                          "text": "'fp' declared without an initial value"
                        },
                        "physicalLocation": {
                          "artifactLocation": {
                            "index": 0,
                            "uri": "./sarif-multi-diagnostic-test.c"
                          },
                          "region": {
                            "endColumn": 12,
                            "endLine": 21,
                            "startColumn": 3,
                            "startLine": 21
                          }
                        }
                      }
                    },
                    {
                      "importance": "essential",
                      "location": {
                        "message": {
                          "text": "Called function pointer is an uninitialized pointer value"
                        },
                        "physicalLocation": {
                          "artifactLocation": {
                            "index": 0,
                            "uri": "./sarif-multi-diagnostic-test.c"
                          },
                          "region": {
                            "endColumn": 9,
                            "endLine": 22,
                            "startColumn": 3,
                            "startLine": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "index": 0,
                  "uri": "./sarif-multi-diagnostic-test.c"
                },
                "region": {
                  "endColumn": 9,
                  "endLine": 22,
                  "startColumn": 3,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Called function pointer is an uninitialized pointer value"
          },
          "ruleId": "core.CallAndMessage",
          "ruleIndex": 2
        },
        {
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "importance": "important",
                      "location": {
                        "message": {
                          "text": "Assuming 'i' is equal to 0"
                        },
                        "physicalLocation": {
                          "artifactLocation": {
                            "index": 0,
                            "uri": "./sarif-multi-diagnostic-test.c"
                          },
                          "region": {
                            "endColumn": 13,
                            "endLine": 26,
                            "startColumn": 7,
                            "startLine": 26
                          }
                        }
                      }
                    },
                    {
                      "importance": "unimportant",
                      "location": {
                        "message": {
                          "text": "Taking true branch"
                        },
                        "physicalLocation": {
                          "artifactLocation": {
                            "index": 0,
                            "uri": "./sarif-multi-diagnostic-test.c"
                          },
                          "region": {
                            "endColumn": 3,
                            "startColumn": 3,
                            "startLine": 26
                          }
                        }
                      }
                    },
                    {
                      "importance": "essential",
                      "location": {
                        "message": {
                          "text": "Division by zero"
                        },
                        "physicalLocation": {
                          "artifactLocation": {
                            "index": 0,
                            "uri": "./sarif-multi-diagnostic-test.c"
                          },
                          "region": {
                            "endColumn": 14,
                            "startColumn": 14,
                            "startLine": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "index": 0,
                  "uri": "./sarif-multi-diagnostic-test.c"
                },
                "region": {
                  "endColumn": 14,
                  "startColumn": 14,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "Division by zero"
          },
          "ruleId": "core.DivideZero",
          "ruleIndex": 3
        },
        {
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "importance": "essential",
                      "location": {
                        "message": {
                          "text": "Memory is allocated"
                        },
                        "physicalLocation": {
                          "artifactLocation": {
                            "index": 0,
                            "uri": "./sarif-multi-diagnostic-test.c"
                          },
                          "region": {
                            "endColumn": 24,
                            "endLine": 32,
                            "startColumn": 15,
                            "startLine": 32
                          }
                        }
                      }
                    },
                    {
                      "importance": "important",
                      "location": {
                        "message": {
                          "text": "Assuming 'i' is < 4"
                        },
                        "physicalLocation": {
                          "artifactLocation": {
                            "index": 0,
                            "uri": "./sarif-multi-diagnostic-test.c"
                          },
                          "region": {
                            "endColumn": 12,
                            "endLine": 33,
                            "startColumn": 7,
                            "startLine": 33
                          }
                        }
                      }
                    },
                    {
                      "importance": "unimportant",
                      "location": {
                        "message": {
                          "text": "Taking true branch"
                        },
                        "physicalLocation": {
                          "artifactLocation": {
                            "index": 0,
                            "uri": "./sarif-multi-diagnostic-test.c"
                          },
                          "region": {
                            "endColumn": 3,
                            "startColumn": 3,
                            "startLine": 33
                          }
                        }
                      }
                    },
                    {
                      "importance": "essential",
                      "location": {
                        "message": {
                          "text": "Potential leak of memory pointed to by 'mem'"
                        },
                        "physicalLocation": {
                          "artifactLocation": {
                            "index": 0,
                            "uri": "./sarif-multi-diagnostic-test.c"
                          },
                          "region": {
                            "endColumn": 12,
                            "startColumn": 12,
                            "startLine": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "index": 0,
                  "uri": "./sarif-multi-diagnostic-test.c"
                },
                "region": {
                  "endColumn": 12,
                  "startColumn": 12,
                  "startLine": 34
                }
              }
            }
          ],
          "message": {
            "text": "Potential leak of memory pointed to by 'mem'"
          },
          "ruleId": "unix.Malloc",
          "ruleIndex": 4
        },
        {
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "importance": "essential",
                      "location": {
                        "message": {
                          "text": "'løçål' initialized to 0"
                        },
                        "physicalLocation": {
                          "artifactLocation": {
                            "index": 0,
                            "uri": "./sarif-multi-diagnostic-test.c"
                          },
                          "region": {
                            "endColumn": 12,
                            "endLine": 40,
                            "startColumn": 3,
                            "startLine": 40
                          }
                        }
                      }
                    },
                    {
                      "importance": "essential",
                      "location": {
                        "message": {
                          "text": "Division by zero"
                        },
                        "physicalLocation": {
                          "artifactLocation": {
                            "index": 0,
                            "uri": "./sarif-multi-diagnostic-test.c"
                          },
                          "region": {
                            "endColumn": 20,
                            "startColumn": 20,
                            "startLine": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "index": 0,
                  "uri": "./sarif-multi-diagnostic-test.c"
                },
                "region": {
                  "endColumn": 20,
                  "startColumn": 20,
                  "startLine": 41
                }
              }
            }
          ],
          "message": {
            "text": "Division by zero"
          },
          "ruleId": "core.DivideZero",
          "ruleIndex": 3
        }
      ],
      "tool": {
        "driver": {
          "fullName": "clang static analyzer",
          "language": "en-US",
          "name": "clang",
          "rules": [
            {
              "fullDescription": {
                "text": "Check for dereferences of null pointers"
              },
              "helpUri": "https://clang-analyzer.llvm.org/available_checks.html#core.NullDereference",
              "id": "core.NullDereference",
              "name": "core.NullDereference"
            },
            {
              "fullDescription": {
                "text": "Mark tainted symbols as such."
              },
              "id": "debug.TaintTest",
              "name": "debug.TaintTest"
            },
            {
              "fullDescription": {
                "text": "Check for logical errors for function calls and Objective-C message expressions (e.g., uninitialized arguments, null function pointers)"
              },
              "helpUri": "https://clang-analyzer.llvm.org/available_checks.html#core.CallAndMessage",
              "id": "core.CallAndMessage",
              "name": "core.CallAndMessage"
            },
            {
              "fullDescription": {
                "text": "Check for division by zero"
              },
              "helpUri": "https://clang-analyzer.llvm.org/available_checks.html#core.DivideZero",
              "id": "core.DivideZero",
              "name": "core.DivideZero"
            },
            {
              "fullDescription": {
                "text": "Check for memory leaks, double free, and use-after-free problems. Traces memory managed by malloc()/free()."
              },
              "helpUri": "https://clang-analyzer.llvm.org/available_checks.html#unix.Malloc",
              "id": "unix.Malloc",
              "name": "unix.Malloc"
            }
          ],
          "version": "clang version 14.0.0 (git@github.com:SonarSource/llvm-project.git 9f1be6aa1425c8d9e3841b61c828e37d207f8cea)"
        }
      }
    }
  ],
  "version": "2.1.0"
}
